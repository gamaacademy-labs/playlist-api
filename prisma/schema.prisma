// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum PlaylistLevel {
  EASY
  MEDIUM
  HARD
}

model Playlists {
  id          String             @id @default(cuid())
  title       String             @unique
  thumbnail   String
  description String
  duration    Int
  level       PlaylistLevel      @default(MEDIUM)
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @default(now()) @updatedAt()
  ratings     PlaylistsRatings[]
  contents    PlaylistContents[]

  @@map("playlists")
}

model PlaylistsRatings {
  id         String    @id @default(cuid())
  playlistId String
  studentId String
  rating     Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt()
  playlist   Playlists @relation(fields: [playlistId], references: [id])
  students Students @relation(fields: [studentId], references: [id])

  @@map("playlists_ratings")
}

model PlaylistContents {
  id         String    @id @default(cuid())
  playlistId String
  contentId  String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt()
  playlist   Playlists @relation(fields: [playlistId], references: [id])
  content    Contents  @relation(fields: [contentId], references: [id])

  @@map("playlist_contents")
}

model Contents {
  id           String            @id @default(cuid())
  title        String            @unique
  thumbnail    String
  linkVideo    String
  ratings      ContentsRatings[]
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @default(now()) @updatedAt()

  playlists PlaylistContents[]
  studentHistory StudentsHistories[]

  @@map("contents")
}

model ContentsRatings {
  id        String    @id @default(cuid())
  contentId String
  studentId String
  rating    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt()
  contents  Contents? @relation(fields: [contentId], references: [id])
  students   Students?  @relation(fields: [studentId], references: [id])

  @@map("contents_ratings")
}

model Students {
  id        String            @id @default(cuid())
  name      String
  createdAt DateTime          @default(now())
  updatedAt DateTime          @default(now()) @updatedAt()
  contentsRatings    ContentsRatings[]
  playlistsRatings PlaylistsRatings[]
  studentHistory StudentsHistories[]

  @@map("students")
}

model StudentsHistories {
  id        String            @id @default(cuid())
  contentId String
  studentId String
  isVideoFinished Boolean     @default(false)
  createdAt DateTime          @default(now())
  updatedAt DateTime          @default(now()) @updatedAt()
  content Contents @relation(fields: [contentId], references: [id])
  student Students @relation(fields: [studentId], references: [id])

  @@map("students_histories")
}
